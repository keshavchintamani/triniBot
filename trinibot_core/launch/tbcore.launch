<launch>

    <!-- Setup environment -->
    <arg name="machine_bot" default = "remote"/>
    <arg name="machine_c2i" default = "local"/>
    <arg name="ip_bot" default = "kc-RPi3-mate.local"/>
    <arg name="ip_c2i" default = "kc.local"/>
    <arg name="machine_bot_user" default = "keshavchintamani"/>
    <arg name="machine_c2i_user" default = "kc"/>

    <!--<env name="ROS_MASTER_URI" value="http://kc-RPi3-mate.local:11311"/>-->

    <machine name="$(arg machine_c2i)"
             address="$(arg ip_c2i)"
             user="$(arg machine_c2i_user)"
             env-loader="/home/kc/sandbox/external-rospacks/src/trinibot_core/laptop_envloader.sh"
             timeout="10.0"
              >
    </machine>
    <machine name="$(arg machine_bot)"
             address="$(arg ip_bot)"
             user="$(arg machine_bot_user)"
             env-loader="/home/keshavchintamani/trinibot_ws/src/trinibot_core/pi_envloader.sh"
             timeout="10.0"
              >
    </machine>

    <!-- Geometry-->

    <node pkg="trinibot_core" type="tbplatformtransform.py" name="tbplatformtransforms" machine="$(arg machine_c2i)" respawn="false" output="screen">
    </node>
    <!-- Image pipeline  -->
    <node pkg="ros_depthsense_camera" type="depthsense_camera_node" name="trinibot_camera" args="_autofocus=1 _image_width:=320 _image_height:=240 _pixel_format:=&quot;yuyv&quot;" machine ="$(arg machine_bot)" respawn="false" output="screen">
    </node>

    <!--<node pkg="trinibot_core" type="tbimageflip.py" name="imageflip" machine ="$(arg machine_c2i)" respawn="false" output="screen" >
        <remap from="/camera/image" to="/trinibot_camera/image_raw/compressed"  />
        <remap from="/camera_info" to= "/trinibot_camera/camera_info"  />
    </node>
    -->

    <!-- Motion control -->
    <node pkg="trinibot_core" type="tbmotioncontroller.py" args="/dev/ttyACM0 10 1 1" name="robotcontroller" machine="$(arg machine_bot)" respawn="false" output="screen">
        <remap from="/velocity_cmd" to="/trinibot_gui/velocity_cmd"  />
        <remap from="/string_cmd" to= "/trinibot_gui/string_cmd"  />
    </node>

    <!-- Sensors -->
    <node pkg="trinibot_core" type="tbsensehat.py" name="sensehat"  machine="$(arg machine_bot)" respawn="false" />
    <node pkg="robot_localization" type="ekf_localization_node" name="ekf_se" machine="$(arg machine_c2i)" clear_params="true"/>
    <rosparam command="load" file="$(find trinibot_core)/params/tb_ekf.yaml" />

    <!-- Marker Tracking -->

    <node pkg="trinibot_core" type="tbteleopgui.py" name="teleoperation_gui" machine="$(arg machine_c2i)" respawn="false" output="screen" />



    <node pkg="image_view" type="image_view" name="aruco_viewer"  args="image:=/trinibot_camera/image_flipped _image_transport:=compressed" machine ="$(arg machine_c2i)" respawn="false" output="screen" />

<!--GUIs
    <node pkg="ORB_SLAM2" type="Mono" name="orbslam" args="$(find trinibot_core)/settings/ORBVoc.txt $(find trinibot_core)/settings/color-001-ORBSettings.yaml"  machine="$(arg machine_c2i)" respawn="false">
        <remap from="/camera/image_raw" to="trinibot_camera/image_flipped/raw"/>
      </node>
     -->


</launch>

<!--

#Use this - calls a bash script on the RPi to invoke a rosservice call (to start the raspicam node)
    <node pkg="trinibot_core" type="raspicam_startcamera.bash" name="startcamera" machine="$(machine_bot)" respawn="false" output="screen" />
-->
