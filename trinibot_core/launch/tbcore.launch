<launch>

    <!-- Setup environment -->

    <env name="ROS_MASTER_URI" value="http://192.168.1.15:11311"/>
    <machine name="kc" address="192.168.1.15" user="kc" env-loader="/home/kc/sandbox/external-rospacks/src/trinibot_core/laptop_envloader.sh" timeout="10.0" default="true" />
    <machine name="raspberrypi" address="192.168.1.6" user="pi" env-loader="/home/pi/external-rospacks/src/trinibot_core/pi_envloader.sh" timeout="10.0" default="never" />

    <!-- Geometry-->

    <node pkg="trinibot_core" type="tbplatformtransform.py" name="tbplatformtransforms" machine="kc" respawn="false" output="screen">
    </node>-->
    <!-- Image pipeline -->

    <node pkg="usb_cam" type="usb_cam_node" name="trinibot_camera" args="_autofocus=1 _image_width:=320 _image_height:=240 _pixel_format:=&quot;yuyv&quot;" machine ="raspberrypi" respawn="false" output="screen">
    </node>

       <node pkg="trinibot_core" type="tbimageflip.py" name="imageflip" machine ="raspberrypi" respawn="false" output="screen" >
        <remap from="/image_raw" to="/trinibot_camera/image_raw"  />
        <remap from="/camera_info" to= "/trinibot_camera/camera_info"  />
    </node>

   <!-- <node pkg="trinibot_core" type="tbtimesynchronizer.py" name="time_synchronizer" args="image:=/trinibot_camera/image_raw camera_info:=/trinibot_camera/camera_info" machine="kc" respawn="false" output="screen">
    </node>-->

    <!--<node pkg="image_proc" type="image_proc" name="image_rectifier" ns="trinibot_framesync" machine ="kc" respawn="false" output="screen">
    </node> -->

    <!-- Motion control -->

    <node pkg="trinibot_core" type="tbmotioncontroller.py" args="/dev/ttyAMA0" name="robotcontroller" machine="raspberrypi" respawn="false" output="screen" />
    <node pkg="trinibot_core" type="tbteleopgui.py" name="teleoperation_gui" machine="kc" respawn="false" output="screen" />

    <!-- Sensors -->

<!--    <node pkg="trinibot_core" type="tbsensehat.py" name="sensehat"  machine="raspberrypi" respawn="false" /> -->

    <!-- Augmented Reality -->
    <arg name="markerId"        default="582"/>
    <arg name="markerSize"      default="0.05"/>    <!-- in m -->
    <arg name="marker_frame"    default="aruco_marker_frame"/>
    <arg name="ref_frame"       default=""/>  <!-- leave empty and the pose will be published wrt param parent_name -->
    <arg name="corner_refinement" default="LINES" /> <!-- NONE, HARRIS, LINES, SUBPIX -->

    <node pkg="aruco_ros" type="single" name="aruco_single">
        <remap from="/image" to="/trinibot_camera/image_flipped/image_raw" />
        <remap from="/camera_info" to="/trinibot_camera/image_flipped/camera_info" />
        <param name="image_is_rectified" value="False"/>
        <param name="marker_size"        value="$(arg markerSize)"/>
        <param name="marker_id"          value="$(arg markerId)"/>
        <param name="reference_frame"    value="$(arg ref_frame)"/>   <!-- frame in which the marker pose will be refered -->
        <param name="camera_frame"       value="abcd"/>
        <param name="marker_frame"       value="$(arg marker_frame)" />
        <param name="corner_refinement"  value="$(arg corner_refinement)" />
    </node>

    <!--<node pkg="image_view" type="image_view" name="image_viewer"  args="image:=/trinibot_camera/image_raw" machine ="kc" respawn="false" output="screen" />-->
    <node pkg="image_view" type="image_view" name="aruco_viewer"  args="image:=/aruco_single/result" machine ="kc" respawn="false" output="screen" />


</launch>

<!-- args="image:=/trinibot_camera/image_raw _image_transport:=&quot;compressed&quot;"-->
 <!--  <node pkg="raspicam" type="raspicam_node" name="trinibot_camera" args="_width:=320 _height:=240 _framerate:=15 _quality:=100" machine ="raspberrypi" respawn="false" output="screen">
        <remap from="/camera/image/compressed" to="/trinibot/image" />
    </node>

   <!-
    <node pkg="image_rotate" type="image_rotate" name="trinibot_image_rotate" args="image:=/trinibot_camera/image_raw" machine ="raspberrypi" respawn="false" output="screen">
        <remap from="/usb_cam/image_raw" to="/trinibot/image" />
    </node>

#Use this - calls a bash script on the RPi to invoke a rosservice call (to start the raspicam node)
    <node pkg="trinibot_core" type="raspicam_startcamera.bash" name="startcamera" machine="raspberrypi" respawn="false" output="screen" />
-->
